[
    {
        "type": "number",
        "regexes": [
            "\\b\\d*\\.?\\d+\\b"
        ]
    },
    {
        "type": "variable",
        "regexes": [
            "\\$\\b\\w+\\b"
        ]
    },
    {
        "type": "function",
        "regexes": [
            "\\b[a-zA-Z_][a-zA-Z0-9_-]+?(?=\\()"
        ]
    },
    {
        "type": "keyword",
        "regexes": [
            "\\b__halt_compiler\\b",
            "\\babstract\\b",
            "\\band\\b",
            "\\barray\\b",
            "\\bas\\b",
            "\\bbreak\\b",
            "\\bcallable\\b",
            "\\bcase\\b",
            "\\bcatch\\b",
            "\\bclass\\b",
            "\\bconst\\b",
            "\\bclone\\b",
            "\\bcontinue\\b",
            "\\bdeclare\\b",
            "\\bdefault\\b",
            "\\bdie\\b",
            "\\bdo\\b",
            "\\becho\\b",
            "\\belse\\b",
            "\\belseif\\b",
            "\\bempty\\b",
            "\\benddeclare\\b",
            "\\bendfor\\b",
            "\\bendforeach\\b",
            "\\bendif\\b",
            "\\bendswitch\\b",
            "\\bendwhile\\b",
            "\\beval\\b",
            "\\bexit\\b",
            "\\bextends\\b",
            "\\bfinal\\b",
            "\\bfinally\\b",
            "\\bfor\\b",
            "\\bforeach\\b",
            "\\bfunction\\b",
            "\\bglobal\\b",
            "\\bgoto\\b",
            "\\bif\\b",
            "\\bimplements\\b",
            "\\binclude\\b",
            "\\binclude_once\\b",
            "\\binstanceof\\b",
            "\\binsteadof\\b",
            "\\binterface\\b",
            "\\bisset\\b",
            "\\blist\\b",
            "\\bnamespace\\b",
            "\\bnew\\b",
            "\\bor\\b",
            "\\bprint\\b",
            "\\bprivate\\b",
            "\\bprotected\\b",
            "\\bpublic\\b",
            "\\brequire\\b",
            "\\brequire_once\\b",
            "\\breturn\\b",
            "\\bstatic\\b",
            "\\bswitch\\b",
            "\\bthrow\\b",
            "\\btrait\\b",
            "\\btry\\b",
            "\\bunset\\b",
            "\\buse\\b",
            "\\bvar\\b",
            "\\bwhile\\b",
            "\\bxor\\b",
            "\\byield\\b",
            "\\bint\\b",
            "\\bfloat\\b",
            "\\bbool\\b",
            "\\bstring\\b"
        ]
    },
    {
        "type": "literal-value",
        "regexes": [
            "\\btrue\\b",
            "\\bfalse\\b",
            "\\bnull\\b"
        ]
    },
    {
        "type": "comment",
        "regexes": [
            "\\/\\/.+",
            "\\/\\*[\\S\\s]*?\\*\\/"
        ]
    },
    {
        "type": "wrapping",
        "regexes": [
            "\"(\\\\.|[^\"])*\"",
            "'(\\\\.|[^'])*'"
        ],
        "precedence": "comment"
    }
]
