[
    {
        "type": "number",
        "regexes": [
            "\\b\\d*\\.?\\d+\\b"
        ]
    },
    {
        "type": "variable",
        "regexes": [
            {
                "regexString": "\\.([a-zA-Z_][\\w-]*)\\b",
                "captureGroup": 1
            }
        ]
    },
    {
        "type": "function",
        "regexes": [
            "\\b[a-zA-Z_][\\w-]+?(?= *\\()"
        ]
    },
    {
        "type": "keyword",
        "regexes": [
            "\\bdo\\b",
            "\\bif\\b",
            "\\bin\\b",
            "\\bfor\\b",
            "\\blet\\b",
            "\\bnew\\b",
            "\\btry\\b",
            "\\bvar\\b",
            "\\bcase\\b",
            "\\belse\\b",
            "\\benum\\b",
            "\\beval\\b",
            "\\bthis\\b",
            "\\bvoid\\b",
            "\\bwith\\b",
            "\\bawait\\b",
            "\\bbreak\\b",
            "\\bcatch\\b",
            "\\bclass\\b",
            "\\bconst\\b",
            "\\bsuper\\b",
            "\\bthrow\\b",
            "\\bwhile\\b",
            "\\byield\\b",
            "\\bdelete\\b",
            "\\bexport\\b",
            "\\bimport\\b",
            "\\bpublic\\b",
            "\\breturn\\b",
            "\\bstatic\\b",
            "\\bswitch\\b",
            "\\btypeof\\b",
            "\\bdefault\\b",
            "\\bextends\\b",
            "\\bfinally\\b",
            "\\bpackage\\b",
            "\\bprivate\\b",
            "\\bcontinue\\b",
            "\\bdebugger\\b",
            "\\bfunction\\b",
            "\\barguments\\b",
            "\\binterface\\b",
            "\\bprotected\\b",
            "\\bimplements\\b",
            "\\binstanceof\\b"
        ]
    },
    {
        "type": "literal-value",
        "regexes": [
            "\\btrue\\b",
            "\\bfalse\\b",
            "\\bnull\\b"
        ]
    },
    {
        "type": "class",
        "regexes": [
            "\\b[A-Z]+\\w+?(?= *\\()",
            {
                "regexString": "[A-Z]+\\w+?(?= *\\{)",
                "captureGroup": 1
            }
        ]
    },
    {
        "type": "comment",
        "regexes": [
            "\\/\\/.+",
            "\\/\\*[\\S\\s]*?\\*\\/"
        ]
    },
    {
        "type": "wrapping",
        "regexes": [
            "\"(\\\\.|[^\"])*\"",
            "'(\\\\.|[^'])*'"
        ],
        "precedence": "comment"
    }
]
