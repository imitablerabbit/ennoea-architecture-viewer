[
    {
        "type": "number",
        "regexes": [
            "\\b\\d*\\.?\\d+\\b"
        ]
    },
    {
        "type": "class",
        "regexes": [
            "\\b[A-Z][a-zA-Z0-9_]+"
        ]
    },
    {
        "type": "variable",
        "regexes": [
            {
                "regexString": "\\.([a-zA-Z_][\\w-]*)\\b",
                "captureGroup": 1
            }
        ]
    },
    {
        "type": "function",
        "regexes": [
            "\\b[a-zA-Z_][a-zA-Z0-9_-]+?(?=\\()"
        ]
    },
    {
        "type": "import",
        "regexes": [
            {
                "regexString": "(?:import)\\s+([\\w \\.]+)",
                "captureGroup": 1
            }
        ]
    },
    {
        "type": "keyword",
        "regexes": [
            "\\bassert\\b",
            "\\babstract\\b",
            "\\bboolean\\b",
            "\\bbreak\\b",
            "\\bbyte\\b",
            "\\bcase\\b",
            "\\bcatch\\b",
            "\\bchar\\b",
            "\\bclass\\b",
            "\\bconst\\b",
            "\\bcontinue\\b",
            "\\bdefault\\b",
            "\\bdo\\b",
            "\\bdouble\\b",
            "\\belse\\b",
            "\\benum\\b",
            "\\bextends\\b",
            "\\bfinal\\b",
            "\\bfinally\\b",
            "\\bfloat\\b",
            "\\bfor\\b",
            "\\bgoto\\b",
            "\\bif\\b",
            "\\bimplements\\b",
            "\\bimport\\b",
            "\\binstanceof\\b",
            "\\bint\\b",
            "\\binterface\\b",
            "\\blong\\b",
            "\\bnative\\b",
            "\\bnew\\b",
            "\\bpackage\\b",
            "\\bprivate\\b",
            "\\bprotected\\b",
            "\\bpublic\\b",
            "\\breturn\\b",
            "\\bshort\\b",
            "\\bstatic\\b",
            "\\bstrictfp\\b",
            "\\bsuper\\b",
            "\\bswitch\\b",
            "\\bsynchronized\\b",
            "\\bthis\\b",
            "\\bthrow\\b",
            "\\bthrows\\b",
            "\\btansient\\b",
            "\\btry\\b",
            "\\bvoid\\b",
            "\\bvolatile\\b",
            "\\bwhile\\b"
        ]
    },
    {
        "type": "literal-value",
        "regexes": [
            "\\btrue\\b",
            "\\bfalse\\b",
            "\\bnull\\b"
        ]
    },
    {
        "type": "comment",
        "regexes": [
            "\\/\\/.+",
            "\\/\\*[\\S\\s]*?\\*\\/"
        ]
    },
    {
        "type": "wrapping",
        "regexes": [
            "\"(\\\\.|[^\"])*\"",
            "'.?'"
        ],
        "precedence": "comment"
    }
]
